# Importing necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score

# Load the dataset
data = pd.read_csv("C:\\Users\\hariv\\Downloads\\creditcard.csv\\creditcard.csv")

# Data preprocessing
# Remove the 'Time' column as it is not relevant for this analysis
data.drop('Time', axis=1, inplace=True)

# Split features and target variable
X = data.drop('Class', axis=1)
y = data['Class']

# Splitting the dataset into the Training set and Test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Feature scaling
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# K-Nearest Neighbors (KNN) model
knn_model = KNeighborsClassifier(n_neighbors=5)
knn_model.fit(X_train, y_train)

# Predictions using KNN model
y_pred_knn = knn_model.predict(X_test)

# Logistic Regression model
lr_model = LogisticRegression(max_iter=1000)
lr_model.fit(X_train, y_train)

# Predictions using Logistic Regression model
y_pred_lr = lr_model.predict(X_test)

# Model evaluation
def evaluate_model(y_true, y_pred):
    accuracy = accuracy_score(y_true, y_pred)
    precision = precision_score(y_true, y_pred)
    recall = recall_score(y_true, y_pred)
    f1 = f1_score(y_true, y_pred)
    print("Accuracy:", accuracy)
    print("Precision:", precision)
    print("Recall:", recall)
    print("F1 Score:", f1)

print("Evaluation for KNN Model:")
evaluate_model(y_test, y_pred_knn)

print("\nEvaluation for Logistic Regression Model:")
evaluate_model(y_test,Â y_pred_lr)
